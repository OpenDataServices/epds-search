{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/interaction/Draw.js","node_modules/dotenv/lib/main.js","node_modules/process/browser.js","node_modules/path-browserify/index.js","node_modules/os-browserify/browser.js","map.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'initial';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","import \"./style.css\";\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport View from 'ol/View';\nimport VectorSource from 'ol/source/Vector';\nimport Overlay from 'ol/Overlay';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport { fromLonLat } from 'ol/proj';\nimport { bbox as bboxStrategy } from 'ol/loadingstrategy';\nimport { Circle, Fill, Stroke, Style } from 'ol/style';\nimport Draw, {\n  createBox,\n} from 'ol/interaction/Draw';\n\nrequire('dotenv').config()\n\nwindow.onload = function () {\n  /// Raster layer\n  const osm = new TileLayer({\n    source: new OSM(),\n    name: 'osm',\n  });\n\n  function getVectorSource(layerName, definedExtent) {\n    return new VectorSource({\n      format: new GeoJSON(),\n      url: function () {\n        return (\n          `http://${process.env.GEOSERVER_HOST}:8080/geoserver/wfs?` +\n          'version=1.1.0&' +\n          'request=GetFeature&' +\n          'srsname=EPSG:4326&' +\n          `typename=EPDS:${layerName}&` +\n          'outputFormat=application/json&' +\n          `bbox=${definedExtent.join(',')}` +\n          ',EPSG:3857'\n        );\n      },\n      strategy: bboxStrategy,\n    });\n  }\n\n  /// RSPB Reserves vector layer\n  function getRSPBReserves(definedExtent) {\n    const reserves = new VectorLayer({\n      source: getVectorSource('rspb_reserves', definedExtent),\n      name: 'reserves',\n      style: new Style({\n        stroke: new Stroke({\n          color: 'rgba(0, 0, 255, 1.0)',\n          width: 2,\n        }),\n        fill: new Fill({color: 'rgba(0, 0, 255, 0.4)',}),\n      }),\n    });\n\n    return reserves;\n  }\n\n  /// SSSI vector layer\n  function getSSSI(definedExtent) {\n    const sssi = new VectorLayer({\n      source: getVectorSource('all_sssi', definedExtent),\n      name: 'sssi',\n      style: new Style({\n        stroke: new Stroke({\n          color: 'rgba(0, 255, 0, 1.0)',\n          width: 2,\n        }),\n        fill: new Fill({color: 'rgba(0, 255, 0, 0.4)',}),\n      }),\n    });\n\n    return sssi;\n  }\n\n\n\n  /// TPO vector layer\n  function getTPO(definedExtent) {\n    const tpo = new VectorLayer({\n      source: getVectorSource('trees_near_rspb_reserves', definedExtent),\n      name: 'tpo',\n      style: new Style({\n      image: new Circle({\n          radius: 4,\n          fill: new Fill({color: 'rgba(0, 0, 0, 4)',}),\n          stroke: new Stroke({color: 'rgba(255, 0, 0, 1)',\n          width: 2\n          })\n        })\n      }),\n    });\n\n    return tpo;\n  }\n\n  /// Solr vector layer\n  function getSOLR(definedExtent=null) {\n    const solr = new VectorLayer({\n      source: getVectorSource('Solr_in_SSSI', definedExtent),\n      name: \"solr\",\n      style: new Style({\n        image: new Circle({\n          radius: 4,\n          fill: new Fill({color: 'rgba(0, 0, 0, 0.3)',}),\n          stroke: new Stroke({color: 'rgba(0, 0, 255, 1)',\n          width: 2\n          })\n        })\n      }),\n    });\n\n    return solr;\n  }\n\n\n  /// Drawing layers\n  const drawingSource = new VectorSource({wrapX: false});\n  const drawing = new VectorLayer({\n    source: drawingSource,\n    name: 'draw',\n  });\n\n  /// Map creation\n  let MAPMODE = \"trees_reserves\";\n  const map = new Map({\n    layers: [osm, drawing],\n    target: 'map',\n    view: new View({\n      projection: 'EPSG:3857',\n      center: fromLonLat([-3.432, 54.910]),\n      zoom: 6,\n      minZoom: 6,\n    }),\n  });\n\n  function getLayers(definedExtent) {\n    if (MAPMODE === \"trees_reserves\") {\n      map.addLayer(getRSPBReserves(definedExtent));\n      map.addLayer(getTPO(definedExtent));\n    } else if (MAPMODE === \"solr_sssi\") {\n      map.addLayer(getSOLR(definedExtent))\n      map.addLayer(getSSSI(definedExtent))\n    } else if (MAPMODE === \"all_data\") {\n      map.addLayer(getSSSI(definedExtent))\n      map.addLayer(getRSPBReserves(definedExtent));\n      map.addLayer(getSOLR(definedExtent))\n      map.addLayer(getTPO(definedExtent));\n    }\n    map.removeLayer(drawing)\n  }\n\n  /// Interactions\n  function mapmodeSelection() {\n    MAPMODE = modeSelect.value;\n  }\n\n\n  // Handle change event\n  modeSelect.onchange = function () {\n    mapmodeSelection();\n  };\n\n  /// Drawing\n  let draw; // global so we can remove it later\n  let drawMode = \"none\"\n  function addInteraction() {\n    if (drawMode !== 'none') {\n      let geometryFunction;\n      if (drawMode === 'box') {\n        drawMode = 'Circle';\n        geometryFunction = createBox();\n      }\n      draw = new Draw({\n        source: drawingSource,\n        type: drawMode,\n        geometryFunction: geometryFunction,\n      });\n      draw.on('drawstart', function () {\n        drawingSource.clear();\n      });\n      draw.on('drawend', function (event) {\n        const definedExtent = event.feature.getGeometry().getExtent()\n        getLayers(definedExtent);\n        drawMode = \"none\";\n        map.removeInteraction(draw);\n      });\n      map.addInteraction(draw);\n    }\n  }\n\n  document.getElementById('boxDraw').addEventListener('click', function () {\n    map.removeInteraction(draw);\n    drawMode = \"box\";\n    addInteraction();\n  });\n\n  document.getElementById (\"submitLatLng\").addEventListener (\"click\", function() {\n    const input = document.getElementById('latlng').value.trim();\n    const splitLatLng = input.split(\", \", 2);\n    const parsedLatLng = splitLatLng.map(value => parseFloat(value))\n\n    zoomToCoords(parsedLatLng[0], parsedLatLng[1]);\n\n  });\n\n  function zoomToCoords(lat, lng){\n     map.getView().animate({zoom: 12, center: fromLonLat([lng, lat])}, function () {\n      MAPMODE=\"all_data\"\n      const definedExtent = map.getView().calculateExtent(map.getSize())\n      getLayers(definedExtent);\n    });\n  }\n\n  addInteraction();\n\n\n  const popup = document.getElementById('popup');\n  const popupOverlay = new Overlay({\n    element: popup,\n    offset: [9, 9]\n  });\n  map.addOverlay(popupOverlay);\n\n  // Get tooltips on all features\n  function getFeatureString(layer, feature) {\n    if (layer.get('name') === 'reserves') {\n      return `RSPB Reserve: ${feature.get('name')}`\n    } else if (layer.get('name') === 'tpo') {\n      return `Tree protection order: ${feature.get('description')}`\n    } else if (layer.get('name') === 'solr') {\n      return `Solar farm application: ${feature.get('description')}`\n    } else if (layer.get('name') === 'sssi') {\n      const countryString = feature.get('country');\n      const capitalisedString = countryString.charAt(0).toUpperCase() + countryString.slice(1)\n      return `Site of Special Scientific Interest: ${capitalisedString}`\n    }\n  }\n\n  map.on('pointermove', (event) => {\n    const features = [];\n    const popupContent = []\n    map.forEachFeatureAtPixel(event.pixel,\n        (feature, layer) => {\n          if (layer) {\n            features.push(feature);\n            const values = getFeatureString(layer, feature);\n            popupContent.push(values);\n            popupContent.push('<br>')\n          }\n        },\n    );\n    popup.innerHTML = popupContent.join('');\n    popup.hidden = false;\n    popupOverlay.setPosition(event.coordinate);\n    if (!features || features.length === 0) {\n        popup.innerHTML = '';\n        popup.hidden = true;\n    }\n  });\n\n\n  // Data table view modal\n  function dataTable() {\n    console.log(map.getLayers().getArray())\n    const allLayerFeatureData = map.getLayers().getArray()\n      .filter(layer => ['solr', 'sssi', 'reserves', 'tpo'].includes(layer.get('name')))\n      .map(layer => {return {[layer.get('name')]: layer.getSource().getFeatures().map(feature => feature.getProperties())}})\n    return allLayerFeatureData ;\n  }\n\n  const modal = document.getElementById('tablemodal');\n  const modalContent = document.getElementById('modal-content');\n  document.getElementById('tableview').addEventListener('click', function () {\n    modal.style.display = \"block\";\n    const allData = dataTable();\n    const tableData = allData.map(layerData => arrayToTable(layerData));\n    modalContent.innerHTML = tableData.join(\"\")\n  });\n\n  function getReadableLayerName(layerName) {\n    return {'solr': 'Solar Farm Application', 'sssi': \"SSSI Locations\", 'reserves': 'RSPB Reserves', 'tpo': \"Tree Protection Orders\"}[layerName]\n  }\n\n  function arrayToTable(data) {\n    const layerName = Object.keys(data);\n    const layerData = data[layerName[0]];\n    const keys = [...layerData.reduce((all, obj)=>{\n        Object.keys(obj).forEach(key => all.add(key));\n        return all;\n    }, new Set())];\n\n    const header = keys.map(key => `<th>${key}</th>`).join('')\n    const tbody = layerData.map(row => keys.map(key => `<td>${row[key]}</td>`).join('')).map(row => `<tr>${row}</tr>`)\n\n    return `\n      <h2>${getReadableLayerName(layerName)}</h2>\n      <table class=\"layertable\" id=\"table_${layerName}\">\n          <thead><tr>${header}</tr></thead>\n          <tbody>${tbody}</body>\n      </table>\n    `;\n  }\n\n  const span = document.getElementById(\"closemodal\");\n  span.onclick = function() {\n    modal.style.display = \"none\";\n  }\n\n  window.onclick = function(event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  }\n\n\n  /* Post to any parent window the preferred height\n     * Used when the page is an iframe\n    */\n  console.log(\"sending height info\");\n  window.parent.postMessage({ heightRequest: window.outerHeight }, \"*\");\n\n  if (window.location.search){\n    const urlParams = new URLSearchParams(window.location.search);\n    const lat = urlParams.get(\"lat\");\n    const lng = urlParams.get(\"lng\");\n\n    if (lat && lng){\n      zoomToCoords(parseFloat(lat), parseFloat(lng));\n    }\n  }\n}\n"],"names":["$1386f4ed5b3d2a4b$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$16831c8b3cdccec7$export$8eda8fbd1364c8a1","a","b","$16831c8b3cdccec7$export$45934da9231b7323","arr","target","direction","n","length","i","$16831c8b3cdccec7$export$1f4f991ce94838ce","begin","end","tmp","$16831c8b3cdccec7$export$46e35401bc090c62","data","extension","Array","isArray","$16831c8b3cdccec7$export$bcc761834e33d339","arr1","arr2","len1","$20af65f7a38205f7$export$ad8dd69aa6772cd0","$20af65f7a38205f7$export$5c50afa32081505e","$20af65f7a38205f7$export$3850addf0fb4e6a7","$b1e57fdd8dde574a$export$18e1b4ff5b3c2297","Error","$b1e57fdd8dde574a$var$uidCounter_","$b1e57fdd8dde574a$export$604e9536b9e0488a","obj","ol_uid","String","$f8271a0713c10a69$var$ua","navigator","userAgent","toLowerCase","$f8271a0713c10a69$export$543c908bf17a24fb","indexOf","$f8271a0713c10a69$export$bccc8605349feea7","$f8271a0713c10a69$export$f16ffc71033a7aaa","$f8271a0713c10a69$export$1940d5d2b4cf824d","devicePixelRatio","$f8271a0713c10a69$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$f8271a0713c10a69$export$9544418e5c6fedfe","Image","decode","$f8271a0713c10a69$export$700ce540937d8c69","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$9a566a9848e727af$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$9a566a9848e727af$var$__extends","$20a6d17585e78d64$export$b8795f4f643ce74f","assertion","errorCode","$9a566a9848e727af$exports","default","$ffc5f3d579aca584$var$transformStringDiv","$ffc5f3d579aca584$export$77f8d2fc923b14e3","transform","c","d","e","f","$ffc5f3d579aca584$export$6af9bbf310c9e4bf","coordinate","x","y","$ffc5f3d579aca584$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ffc5f3d579aca584$export$6e6aac0f60e83c70","source","mat","det","$ffc5f3d579aca584$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$ecbf3a0b36c7b4ac$export$9099ad97b570f7c","$92fe712ceb0b4cf4$export$9099ad97b570f7c","$d333a56ccd100cfd$export$a7ecbd362d65c1fe","coordinates","extent","$d333a56ccd100cfd$export$dbb3d72606cdc11","ii","$d333a56ccd100cfd$export$2852acc8f8b94686","$d333a56ccd100cfd$export$14e1765886db335a","value","opt_extent","$d333a56ccd100cfd$export$d6a0542127b96c83","slice","$d333a56ccd100cfd$export$c7d6a927f416dd39","dx","dy","$d333a56ccd100cfd$export$c422a9fcb5f1ee5c","$d333a56ccd100cfd$export$cc70e7e516e4370f","$d333a56ccd100cfd$export$4f55e2d709659e7b","extent1","extent2","$d333a56ccd100cfd$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$d333a56ccd100cfd$export$ea8082d0226d35a5","$d333a56ccd100cfd$export$80741250c74fd4fa","$d333a56ccd100cfd$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$d333a56ccd100cfd$export$4b116deb3079b147","$d333a56ccd100cfd$export$bcc761834e33d339","$d333a56ccd100cfd$export$46e35401bc090c62","$d333a56ccd100cfd$export$8696fee511ea7c7a","min","max","$d333a56ccd100cfd$export$c26f7b9c5adc34b4","callback","val","$d333a56ccd100cfd$export$3932426cd8118930","$d333a56ccd100cfd$export$4e2fc25ce97f3583","$d333a56ccd100cfd$export$35aedeaeee8be6cd","$d333a56ccd100cfd$export$5100f0815ea32995","$d333a56ccd100cfd$export$ab4e37d31d15614d","area","$d333a56ccd100cfd$export$988399e568471db1","$d333a56ccd100cfd$export$3dc3550566517965","$d333a56ccd100cfd$export$e178c8044d3d0a05","$d333a56ccd100cfd$export$339e303bf205caae","$d333a56ccd100cfd$export$38622892ed79bdc7","corner","$d333a56ccd100cfd$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$d333a56ccd100cfd$export$c491031eb9adcc3a","intersection","$d333a56ccd100cfd$export$c3bd2c3b798b0350","$d333a56ccd100cfd$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$d333a56ccd100cfd$var$_boundingExtentXYs","$11d79372009851c4$export$4b8705656de00c72","$11d79372009851c4$export$4a376e0f60d976ee","cosh","exp","$11d79372009851c4$export$e08236045caaa3e1","log2","log","LOG2E","$11d79372009851c4$export$fd0b1e5ac4df516c","t","$11d79372009851c4$export$8b6706701cd75ea9","$11d79372009851c4$export$11468133b1231643","angleInRadians","PI","$11d79372009851c4$export$4fc80c88d72f096","angleInDegrees","$11d79372009851c4$export$3334706ffb3dccb1","r","$11d79372009851c4$export$45ca8e7f50ccf2e0","$24f1b8341536f1fa$var$HEX_COLOR_RE_","$24f1b8341536f1fa$var$NAMED_COLOR_RE_","$24f1b8341536f1fa$export$9fe004474d6f7f65","color","$24f1b8341536f1fa$export$47bee913e0e80eb4","$24f1b8341536f1fa$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$24f1b8341536f1fa$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$24f1b8341536f1fa$export$2e33abec8aecd572","map","Number","$24f1b8341536f1fa$var$fromStringInternal_","$24f1b8341536f1fa$export$7266a24c0caa2a8","undefined","$6184461a452b3df9$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$6184461a452b3df9$var$getKey","set","setSize","maxCacheSize","$6184461a452b3df9$export$601b9e2be44c7cb2","$3d78a3a2062be6dd$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$727bf6738fdde94d$export$9099ad97b570f7c","$1ed278ebd065aaf6$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$1ed278ebd065aaf6$export$97fff7491bd246bd","object","property","$1ed278ebd065aaf6$export$207c30846165e93a","values","$1ed278ebd065aaf6$export$988399e568471db1","$c8df8fba8e9f5c07$var$Target","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$c8df8fba8e9f5c07$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$c8df8fba8e9f5c07$export$9099ad97b570f7c","$00d29b6ace6e67fa$export$9099ad97b570f7c","$46e86cc58f3e2235$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$46e86cc58f3e2235$export$d2df825b2d8bc2ba","$46e86cc58f3e2235$export$6dee5fd4fdf600ff","$11407e360abf7d44$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$11407e360abf7d44$var$__extends","changed","getRevision","len","ol_key","$11407e360abf7d44$export$21f63b82add5980c","$c8df8fba8e9f5c07$exports","$11407e360abf7d44$export$9099ad97b570f7c","$3e906ccbcd24be16$export$b902cfd711fa7f06","ObjectEvent","oldValue","$3e906ccbcd24be16$var$__extends","$3e906ccbcd24be16$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$11407e360abf7d44$exports","$6755f2167754dc52$export$9099ad97b570f7c","$7436508a8164a9fe$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$7436508a8164a9fe$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$3e906ccbcd24be16$exports","$b9d5daa9625d320c$export$9099ad97b570f7c","$021387f4bbb0e320$export$9099ad97b570f7c","$d78a3f8d945e8ec2$export$16970faadcd3f29b","layerState","viewState","zoom","$d78a3f8d945e8ec2$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$d78a3f8d945e8ec2$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$7436508a8164a9fe$exports","$31a6ec27eb422148$export$bcc761834e33d339","coordinate1","coordinate2","equals","$31a6ec27eb422148$export$d40e2456b1281660","cosAngle","sinAngle","$31a6ec27eb422148$export$8b6706701cd75ea9","coord1","coord2","$31a6ec27eb422148$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$31a6ec27eb422148$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$ba9cc254c2e615b0$var$MapRenderer","MapRenderer","map_","$ba9cc254c2e615b0$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$d78a3f8d945e8ec2$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ba9cc254c2e615b0$var$expireIconCache","$ba9cc254c2e615b0$export$9099ad97b570f7c","$7246c595371691cc$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7246c595371691cc$var$__extends","$35f3eb34fb00a437$var$fontRegEx","RegExp","$35f3eb34fb00a437$var$fontRegExMatchIndex","$35f3eb34fb00a437$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$158e6a8754c20e7c$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$158e6a8754c20e7c$export$954ce77093b0d494","element","offsetWidth","marginLeft","marginRight","$158e6a8754c20e7c$export$a3ec1d24165186f9","offsetHeight","marginTop","marginBottom","$158e6a8754c20e7c$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$158e6a8754c20e7c$export$47503d53c08beb29","$158e6a8754c20e7c$export$f0994cfd84ab1152","lastChild","$33ba1dda25080cc3$export$6ad0413f8fea3c71","$33ba1dda25080cc3$export$70c5a077e5d6beb9","$33ba1dda25080cc3$export$907cf5cff4a8acb1","console","warn","$33ba1dda25080cc3$var$measureFont","measureElement","$33ba1dda25080cc3$var$measureContext","$33ba1dda25080cc3$export$384c0f09c94ed6cc","$33ba1dda25080cc3$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$33ba1dda25080cc3$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$33ba1dda25080cc3$export$a2bf16790cd8f004","metrics","$33ba1dda25080cc3$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$33ba1dda25080cc3$export$4b2ca35321179b27","$33ba1dda25080cc3$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$33ba1dda25080cc3$var$executeLabelInstructions","drawImage","restore","$2d3983d3c236cd0f$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$35f3eb34fb00a437$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2d3983d3c236cd0f$var$__extends","event_1","$7246c595371691cc$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$158e6a8754c20e7c$export$439ebc2b0f0ec9f4","getDataAtPixel","$ba9cc254c2e615b0$exports","$2d3983d3c236cd0f$export$9099ad97b570f7c","$8c239c70ba402b1b$export$9099ad97b570f7c","$12698a83d5d6619d$var$Property","$12698a83d5d6619d$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$12698a83d5d6619d$var$__extends","$12698a83d5d6619d$var$Collection","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$12698a83d5d6619d$export$9099ad97b570f7c","$78bdbac1eaad4f08$var$Property","$78bdbac1eaad4f08$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$12698a83d5d6619d$exports","setLayers","$78bdbac1eaad4f08$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$78bdbac1eaad4f08$export$9099ad97b570f7c","$5f50aaa354ee43e8$export$9099ad97b570f7c","MapEvent","$5f50aaa354ee43e8$var$__extends","$5cb33e338f86483d$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5cb33e338f86483d$var$__extends","getEventPixel","getCoordinateFromPixel","$5f50aaa354ee43e8$exports","$1701e629f00eed9c$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$eef913c1b3abba70$export$9099ad97b570f7c","$5ce77a9367e71852$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$5ce77a9367e71852$var$__extends","emulateClick_","pointerEvent","newEvent","$5cb33e338f86483d$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$75da2f64972311f8$export$9099ad97b570f7c","$aa15c1da5ede11e4$export$9099ad97b570f7c","$a5b5f21c6babad23$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$a5b5f21c6babad23$export$9099ad97b570f7c","$7c9022c2746a8240$export$9099ad97b570f7c","$79e77b05f0af3af4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$79e77b05f0af3af4$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$79e77b05f0af3af4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$4d7a66b176a5dddb$export$9099ad97b570f7c","$ed930b4d99744cb5$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$ed930b4d99744cb5$export$af68584dedf5e52c","$ed930b4d99744cb5$export$9099ad97b570f7c","$9d93d71f67d1f597$export$9099ad97b570f7c","$e90c70f3094ec23d$export$9099ad97b570f7c","$b3eb9bab7e855649$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$a2e3ad3c6452af0b$export$bb1f4f75177e5528","$a2e3ad3c6452af0b$export$6fd015d56b8406c9","$a2e3ad3c6452af0b$export$64afaa717a0c4932","$a2e3ad3c6452af0b$export$2126dea64bc40b7b","tan","$a2e3ad3c6452af0b$var$EPSG3857Projection","EPSG3857Projection","point","$a2e3ad3c6452af0b$var$__extends","$a2e3ad3c6452af0b$export$850c9b527a5298aa","$a2e3ad3c6452af0b$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$a2e3ad3c6452af0b$export$f361696640082386","atan","$dbcd2854ae42c095$export$6fd015d56b8406c9","$dbcd2854ae42c095$export$af68584dedf5e52c","$dbcd2854ae42c095$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$dbcd2854ae42c095$var$__extends","$dbcd2854ae42c095$export$850c9b527a5298aa","$78eb3a0f9f69d51f$var$cache","$0e52faab48d1c258$var$transforms","$0e52faab48d1c258$export$568ed88074851180","destination","sourceCode","destinationCode","$8adf1144ec7585ad$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$8adf1144ec7585ad$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$257c627c1e280f22$export$3fbbaef54e2e9d28","$257c627c1e280f22$export$678028d364072132","$257c627c1e280f22$export$6308908a0016f099","$78eb3a0f9f69d51f$export$568ed88074851180","$257c627c1e280f22$export$7eb84799c931fe91","projectionLike","replace","$257c627c1e280f22$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$257c627c1e280f22$export$747af4f49bde2f53","vertices","$257c627c1e280f22$export$a42db349809b0c24","projections","$257c627c1e280f22$export$fd4cd3535c7ea97f","$257c627c1e280f22$export$f704437a72056fb8","defaultCode","$257c627c1e280f22$export$13550698a4b6771e","opt_projection","$257c627c1e280f22$export$4b169b49e1a4823b","$257c627c1e280f22$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$0e52faab48d1c258$export$7eb84799c931fe91","$257c627c1e280f22$export$9336879ef6599bf5","$257c627c1e280f22$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$257c627c1e280f22$var$userProjection","$257c627c1e280f22$export$352fd07bdd93dc1e","$257c627c1e280f22$export$4a182a4d53d7595c","$257c627c1e280f22$export$b5d00774755783fc","destProjection","$257c627c1e280f22$export$a7d473ff80a6a3b","$257c627c1e280f22$export$f87215506b474b9e","$7a79f648aa728795$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$7a79f648aa728795$export$eaafe0fae18e32b1","$0e1a1b60122676ba$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$0e1a1b60122676ba$var$getSmoothClampedResolution","$0e1a1b60122676ba$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$bfacba8d4304d68f$export$e97ec87d2336bd4e","$bfacba8d4304d68f$export$eaafe0fae18e32b1","$69c984769656a840$export$9fbc3b1d6b2da9ec","pow","$69c984769656a840$export$673b9849e2bc032c","$69c984769656a840$export$1b5c1277e30d397d","$69c984769656a840$export$5523e35ab8ae283a","$a2e3ad3c6452af0b$exports","PROJECTIONS","$dbcd2854ae42c095$exports","fromEPSG4326","toEPSG4326","$4d6d0df5f6d473fe$export$9099ad97b570f7c","$38fbdbcddbfb2114$export$92106241c01aa541","opt_dest","dest","$38fbdbcddbfb2114$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$38fbdbcddbfb2114$export$41b0d7466cde8385","$2c40e41d9046f704$var$tmpTransform","$2c40e41d9046f704$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$2c40e41d9046f704$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$d333a56ccd100cfd$export$d1e01ccfd06bf8ee","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$fbc4cbc2dbecf2fd$var$SimpleGeometry","SimpleGeometry","layout","$fbc4cbc2dbecf2fd$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$fbc4cbc2dbecf2fd$export$2a65008b73824080","setCoordinates","opt_layout","setLayout","nesting","$fbc4cbc2dbecf2fd$var$getLayoutForStride","$38fbdbcddbfb2114$export$8f869025bba9609b","$2c40e41d9046f704$exports","$fbc4cbc2dbecf2fd$export$36912b83e488cd77","simpleGeometry","$fbc4cbc2dbecf2fd$export$9099ad97b570f7c","$1eeaf5ba3166ef8e$var$assignClosest","offset1","offset2","$1eeaf5ba3166ef8e$export$acf7548d1f0e8581","squaredDelta","$1eeaf5ba3166ef8e$export$ba38095f6bb45df2","ends","$1eeaf5ba3166ef8e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$1eeaf5ba3166ef8e$export$3dd3914e22f9012e","$341fcb0cdbf81912$export$a53e62528b652807","$341fcb0cdbf81912$export$e175f505890ac90f","$341fcb0cdbf81912$export$ab1a51db55485752","coordinatess","opt_ends","jj","$54c380e0fb260ccc$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$54c380e0fb260ccc$export$ade7859c9eb393ec","simplifiedEnds","$54c380e0fb260ccc$export$383ea8a1f2974dfb","$54c380e0fb260ccc$export$e29de4fdb2175738","$54c380e0fb260ccc$export$1df19a1eb5514c2f","$ebfee1857bdd365b$export$92f32d891164b0ac","opt_coordinates","$ebfee1857bdd365b$export$d82a8a3167f968d","opt_coordinatess","$ebfee1857bdd365b$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$d21f3a0ce2fde0f1$export$9bf2059fd656d5e9","twiceArea","$d21f3a0ce2fde0f1$export$99cb92d00fd73c87","$2eba2434999e946d$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$2eba2434999e946d$var$__extends","getArea","$fbc4cbc2dbecf2fd$exports","$d78f061ab8e6937f$var$Point","Point","$d78f061ab8e6937f$var$__extends","$d78f061ab8e6937f$export$9099ad97b570f7c","$3c65f17c9f70f766$export$f7b55b637f92fd7","$3c65f17c9f70f766$export$e2ed757909b25f63","wn","$3c65f17c9f70f766$export$51e46a3625992b91","$7db2c52ec52bd7cf$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$ff23e8a6e0292000$export$40f3d9558cf6e846","ret","$2b86337dc0cae6ce$export$26f047a5bfac4b1a","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$d333a56ccd100cfd$export$525a75abb91115e3","$2b86337dc0cae6ce$export$717c2c7c46a5bf3d","$2b86337dc0cae6ce$export$f14bd9270666b480","$4e5c47cc66c1cbb9$export$c77fe031a1447f2e","$846e7d12e139eeec$export$add61ad31d0a68b4","edge","$846e7d12e139eeec$export$586adaf930d9fdb6","opt_right","right","isClockwise","$846e7d12e139eeec$export$325e57738fd8b321","$846e7d12e139eeec$export$4efd43868de93336","$8577ba96696c7470$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$8577ba96696c7470$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$d78f061ab8e6937f$exports","getLinearRingCount","getLinearRing","$2eba2434999e946d$exports","getLinearRings","linearRings","$8577ba96696c7470$export$9099ad97b570f7c","$8577ba96696c7470$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$8577ba96696c7470$export$b50d271c6e9656cd","$8577ba96696c7470$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$8577ba96696c7470$export$5d1798f0e1df079","getRadius","startAngle","$013cf7a9f19a8f6c$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$013cf7a9f19a8f6c$var$__extends","resolutionConstraintInfo","$013cf7a9f19a8f6c$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$013cf7a9f19a8f6c$export$535fae5a159fbda4","resolutionConstraint","constraint","rotationConstraint","$013cf7a9f19a8f6c$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$013cf7a9f19a8f6c$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$013cf7a9f19a8f6c$export$5d87c27d7d9f380e","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$013cf7a9f19a8f6c$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","$8577ba96696c7470$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$0e1a1b60122676ba$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$0e1a1b60122676ba$export$7690ad4e930f454b","theta","opt_tolerance","enableRotation","constrainRotation","$013cf7a9f19a8f6c$export$9099ad97b570f7c","$1584674e6c442cb4$export$c563c2b7121f8771","$1584674e6c442cb4$export$48d31d2725e4d98b","$f45eee633772e0e7$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$78bdbac1eaad4f08$exports","view","$013cf7a9f19a8f6c$exports","$f45eee633772e0e7$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$79e77b05f0af3af4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","addOverlayInternal_","getId","toString","control","interaction","$f45eee633772e0e7$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$5ce77a9367e71852$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","parseFloat","getClientRects","$f45eee633772e0e7$export$9099ad97b570f7c","$52e6a1ab15a4b16d$var$Control","Control","target_","listenerKeys","$52e6a1ab15a4b16d$var$__extends","mapEvent","$52e6a1ab15a4b16d$export$9099ad97b570f7c","$d272f1a7f2d66954$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$d272f1a7f2d66954$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$52e6a1ab15a4b16d$exports","$d272f1a7f2d66954$export$9099ad97b570f7c","$df8a7089a421bf2f$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$df8a7089a421bf2f$var$__extends","resetNorth_","$1022d6743ffba880$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$1022d6743ffba880$var$__extends","zoomByDelta_","currentZoom","newZoom","$6fe2ef1e7a750c69$export$9099ad97b570f7c","$f26f33305875ffd9$export$63568b31cb17dd4d","$f26f33305875ffd9$export$d2c07614bfd6a817","$f26f33305875ffd9$export$9099ad97b570f7c","Interaction","setActive","$f26f33305875ffd9$var$__extends","active","$247995ce03a38b1e$export$9099ad97b570f7c","DoubleClickZoom","delta_","$247995ce03a38b1e$var$__extends","stopEvent","shiftKey","$f26f33305875ffd9$exports","zoomByDelta","$15b70ec573750fa6$export$e61edea4dfe4ed9b","$15b70ec573750fa6$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$15b70ec573750fa6$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$15b70ec573750fa6$var$isPointerDraggingEvent","$1dd9bb17917c1459$export$8dbdea330bbd6b3c","conditions","pass","$1dd9bb17917c1459$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$1dd9bb17917c1459$export$584a07df7b145c47","hasAttribute","activeElement","$1dd9bb17917c1459$export$363947888fb85da6","$1dd9bb17917c1459$export$a8612972eacfc116","$1dd9bb17917c1459$export$9f5e19851eeaf2c1","$1dd9bb17917c1459$export$1734dfcac3c09b2f","$1dd9bb17917c1459$export$59c8376875f673f8","$1dd9bb17917c1459$export$5bbcce8021828272","tagName","$1dd9bb17917c1459$export$d31d3f3aa38542a8","pointerType","$1dd9bb17917c1459$export$45cd27c0322d6513","isPrimary","$f61551752c4f4f08$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$f61551752c4f4f08$var$__extends","centroid","$15b70ec573750fa6$exports","update","getDistance","getAngle","centerpx","$d813784fb0405083$export$9099ad97b570f7c","DragRotate","lastAngle_","$d813784fb0405083$var$__extends","$46289f3b330b6586$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$46289f3b330b6586$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$a8d898a7bd6fd9e0$var$DragBoxEventType","$a8d898a7bd6fd9e0$export$4d9b552836937ca2","DragBoxEvent","$a8d898a7bd6fd9e0$var$__extends","$a8d898a7bd6fd9e0$export$9099ad97b570f7c","DragBox","box_","$46289f3b330b6586$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$6a3aca92466c0896$export$9099ad97b570f7c","DragZoom","out_","out","$6a3aca92466c0896$var$__extends","factor","$a8d898a7bd6fd9e0$exports","$11a5f739eb17e24b$export$9099ad97b570f7c","$52d09675c125dcf1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$52d09675c125dcf1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$1fae754d3ea6677a$export$9099ad97b570f7c","KeyboardZoom","$1fae754d3ea6677a$var$__extends","charCode","charCodeAt","$e0121ce5936cb4d8$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$cd0092067e7ded9c$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$cd0092067e7ded9c$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$cd0092067e7ded9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$a80081c3438ffbf4$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$a80081c3438ffbf4$var$__extends","rotationDelta","touch0","touch1","$e1a7c7fda3fcb5d0$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$e1a7c7fda3fcb5d0$var$__extends","scaleDelta","$b92278933294ec34$export$9099ad97b570f7c","Map1","$1022d6743ffba880$exports","zoomOptions","$df8a7089a421bf2f$exports","rotateOptions","attribution","$d272f1a7f2d66954$exports","attributionOptions","$3ba5c30aca7182c2$export$b403fbac94228e09","altShiftDragRotate","$d813784fb0405083$exports","doubleClickZoom","$247995ce03a38b1e$exports","zoomDelta","zoomDuration","dragPan","$f61551752c4f4f08$exports","pinchRotate","$a80081c3438ffbf4$exports","pinchZoom","$e1a7c7fda3fcb5d0$exports","keyboard","$52d09675c125dcf1$exports","$1fae754d3ea6677a$exports","mouseWheelZoom","$cd0092067e7ded9c$exports","shiftDragZoom","$6a3aca92466c0896$exports","$c930ad710d84b305$export$b403fbac94228e09","$b92278933294ec34$var$__extends","$2d3983d3c236cd0f$exports","$f45eee633772e0e7$exports","$42eaa0851eb221cf$export$9099ad97b570f7c","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$42eaa0851eb221cf$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$723ec55387d416d6$export$9099ad97b570f7c","ImageBase","$723ec55387d416d6$var$__extends","getImage","getPixelRatio","$cd8285e3e84f4d13$export$9099ad97b570f7c","$fced4221eaca0419$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$fced4221eaca0419$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$723ec55387d416d6$exports","$17444c5007a5df29$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$17444c5007a5df29$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$fced4221eaca0419$exports","listenImage","$42eaa0851eb221cf$exports","$4e3d7af6ddc0a7bb$var$brokenDiagonalRendering_","$7885574070ba36b3$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$1a48f53661f04756$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$4e3d7af6ddc0a7bb$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","$4e3d7af6ddc0a7bb$var$verifyBrokenDiagonalRendering","$4e3d7af6ddc0a7bb$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$4e3d7af6ddc0a7bb$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$11d79372009851c4$export$27dc5719ceda6735","getImageData","$4e3d7af6ddc0a7bb$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$ad06dd403e0a8513$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$4e3d7af6ddc0a7bb$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$ad06dd403e0a8513$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$bf88e629b6ee6163$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf88e629b6ee6163$export$9099ad97b570f7c","$153c3e950abfd740$export$ea8082d0226d35a5","opt_tileCoord","$153c3e950abfd740$export$1039fb0288fd71e3","$153c3e950abfd740$export$a0f0ccbe5bbc0789","$61823e7907e95ef6$export$9099ad97b570f7c","TileCache","$61823e7907e95ef6$var$__extends","expireCache","pruneExceptNewestZ","$153c3e950abfd740$export$5208a752d34424e5","$4bb75659bb3462f8$export$9099ad97b570f7c","$3fa87a5786fdcb68$var$adaptAttributions","attributionLike","$3fa87a5786fdcb68$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$3fa87a5786fdcb68$var$__extends","getContextOptions","refresh","setAttributions","$755de0abe16276c4$var$TileRange","TileRange","containsTileRange","tileRange","getHeight","getWidth","$755de0abe16276c4$export$ea8082d0226d35a5","$755de0abe16276c4$export$9099ad97b570f7c","$4957c1686d037101$var$tmpTileCoord","$4957c1686d037101$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$4957c1686d037101$export$9099ad97b570f7c","$1770d80474e42ee1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$1770d80474e42ee1$var$resolutionsFromExtent","$1770d80474e42ee1$export$57c49ef1657592d4","$1770d80474e42ee1$export$9666e825b22d806d","$1770d80474e42ee1$export$6dfef52f91d4f582","opt_maxResolution","half","$5b2b9f9d853aaab8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$61823e7907e95ef6$exports","tmpSize","tileOptions","zDirection","$5b2b9f9d853aaab8$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","$1770d80474e42ee1$export$5a0d9577a24f3c5b","$153c3e950abfd740$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$3fa87a5786fdcb68$exports","$5b2b9f9d853aaab8$export$8434c8db61edbf9d","TileSourceEvent","$5b2b9f9d853aaab8$export$9099ad97b570f7c","$309456a17bc9d7d9$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$309456a17bc9d7d9$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$153c3e950abfd740$export$4639c7f2947f4458","$309456a17bc9d7d9$export$c6a04e0c49b28953","$ed8b1ee91d3b1512$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$ed8b1ee91d3b1512$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$5b2b9f9d853aaab8$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$309456a17bc9d7d9$export$47abe479fba0e55d","$ed8b1ee91d3b1512$export$9099ad97b570f7c","$a00efaa4b8159fae$var$TileImage","TileImage","$a00efaa4b8159fae$var$defaultTileLoadFunction","tileClass","$17444c5007a5df29$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$a00efaa4b8159fae$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$ad06dd403e0a8513$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ed8b1ee91d3b1512$exports","imageTile","$a00efaa4b8159fae$export$9099ad97b570f7c","$5e7113aef66904ec$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$1770d80474e42ee1$export$5731532c605ee56","$5e7113aef66904ec$var$__extends","$a00efaa4b8159fae$exports","$0ba296154ef38f2d$export$bd9c1867755cf54e","$0ba296154ef38f2d$export$9099ad97b570f7c","OSM","$0ba296154ef38f2d$var$__extends","$5e7113aef66904ec$exports","$e5266561d049a513$export$7cf753b6a6534915","styles_1","$e5266561d049a513$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$e5266561d049a513$var$__extends","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$a1ed4c2e9ff299f1$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$a1ed4c2e9ff299f1$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$a1ed4c2e9ff299f1$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$a1ed4c2e9ff299f1$export$9099ad97b570f7c","$45178ee5c320f5c0$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$45178ee5c320f5c0$export$534b7b915a5ec453","write","transformed","decimals","power_1","$82712b733b1390bc$export$9099ad97b570f7c","$3e9a0d8aed32823b$var$getObject","parse","$3e9a0d8aed32823b$export$9099ad97b570f7c","JSONFeature","$3e9a0d8aed32823b$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$ad7f8cfc102a20b1$export$55be7a9e3fef4787","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$16831c8b3cdccec7$export$26b1c556c0e0f127","$ad7f8cfc102a20b1$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$72877ffc9795efcc$export$7326ac1b36a49776","$7fc9bac1c7e6a765$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$7fc9bac1c7e6a765$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$8e075789d295b82f$var$MultiLineString","MultiLineString","lineStrings","$8e075789d295b82f$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$ad7f8cfc102a20b1$export$8958f67b085a89b1","getLineString","$7fc9bac1c7e6a765$exports","getLineStrings","getFlatMidpoints","midpoints","$2b86337dc0cae6ce$export$414b603e1c51ecd4","$8e075789d295b82f$export$9099ad97b570f7c","$ec70b77b5d212b39$var$MultiPoint","MultiPoint","$ec70b77b5d212b39$var$__extends","appendPoint","multiPoint","getPoint","getPoints","points","$ec70b77b5d212b39$export$9099ad97b570f7c","$2b01038ad8909ddb$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$2b01038ad8909ddb$var$__extends","appendPolygon","newEndss","multiPolygon","$1eeaf5ba3166ef8e$export$7bbfd5f5d0d7544b","$1eeaf5ba3166ef8e$export$6564f135364e210c","$3c65f17c9f70f766$export$664b9cb38de51b70","$d21f3a0ce2fde0f1$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$089899774745c253$export$3ed76a8ff8a671c","interiorPoints","$7db2c52ec52bd7cf$export$2bd6b2f516920f59","getInteriorPoints","$ec70b77b5d212b39$exports","$846e7d12e139eeec$export$9ae9bd8fe57776c1","simplifiedEndss","$54c380e0fb260ccc$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$2b86337dc0cae6ce$export$eae4874c99627698","$341fcb0cdbf81912$export$abe2fb3e7ce9556","lastEnds","$2b01038ad8909ddb$export$9099ad97b570f7c","$90b5c261a4f758a8$var$GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$90b5c261a4f758a8$var$__extends","geoJSONFeature","$90b5c261a4f758a8$var$readGeometry","$e5266561d049a513$exports","geoJSONFeatures","crs","$90b5c261a4f758a8$var$writeGeometry","objects","$3e9a0d8aed32823b$exports","$90b5c261a4f758a8$var$readPointGeometry","$90b5c261a4f758a8$var$readLineStringGeometry","$90b5c261a4f758a8$var$readPolygonGeometry","$90b5c261a4f758a8$var$readMultiPointGeometry","$8e075789d295b82f$exports","$90b5c261a4f758a8$var$readMultiLineStringGeometry","$2b01038ad8909ddb$exports","$90b5c261a4f758a8$var$readMultiPolygonGeometry","$a1ed4c2e9ff299f1$exports","$90b5c261a4f758a8$var$readGeometryCollectionGeometry","geoJSON","$90b5c261a4f758a8$var$writePointGeometry","$90b5c261a4f758a8$var$writeLineStringGeometry","rightHanded","$90b5c261a4f758a8$var$writePolygonGeometry","$90b5c261a4f758a8$var$writeMultiPointGeometry","$90b5c261a4f758a8$var$writeMultiLineStringGeometry","$90b5c261a4f758a8$var$writeMultiPolygonGeometry","geometry1","$90b5c261a4f758a8$var$writeGeometryCollectionGeometry","$90b5c261a4f758a8$export$9099ad97b570f7c","$37ca435c53f13d4d$exports","t1","t2","r1","e1","a1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$bb0e1df757854922$var$RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$bb0e1df757854922$export$9099ad97b570f7c","$c0e76308793a8fd7$export$9099ad97b570f7c","$0d7b3e6e3fdff479$export$8dbdea330bbd6b3c","$0d7b3e6e3fdff479$export$83cf55828588bcc4","$2e1cfd628699255e$var$withCredentials","$2e1cfd628699255e$export$52988233cf090939","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2e1cfd628699255e$export$4355fa6d12274ca5","addFeatures","$2649c727c2ac59b6$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$2649c727c2ac59b6$var$__extends","$2649c727c2ac59b6$var$VectorSource","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$2649c727c2ac59b6$export$9099ad97b570f7c","$a4cba6e4824a6e5e$export$9099ad97b570f7c","$f93e514f182cfa11$var$Property","$f93e514f182cfa11$export$9099ad97b570f7c","Overlay","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$f93e514f182cfa11$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$353a86b6785d23cf$export$9099ad97b570f7c","$289d8a06dd383ff7$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$289d8a06dd383ff7$var$__extends","getPreload","getUseInterimTilesOnError","$0d7ccc2184bbb6ae$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$0d7ccc2184bbb6ae$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","imageState","$48340b1070105b4e$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$48340b1070105b4e$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$0d7ccc2184bbb6ae$exports","$9056ddaf99896c0e$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$9056ddaf99896c0e$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","$48340b1070105b4e$exports","$9056ddaf99896c0e$export$9099ad97b570f7c","$e61f98c73384e953$export$9099ad97b570f7c","TileLayer","$e61f98c73384e953$var$__extends","$9056ddaf99896c0e$exports","$289d8a06dd383ff7$exports","$7736c129cc15e8f7$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$6376afaf3edc9c87$export$55029509b82b2e2b","$09e02ea90a0e8bf3$var$RegularShape","RegularShape","hitDetectionCanvas_","fill_","fill","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$09e02ea90a0e8bf3$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$09e02ea90a0e8bf3$export$9099ad97b570f7c","$52515b32646d1620$export$9099ad97b570f7c","CircleStyle","$52515b32646d1620$var$__extends","setRadius","$09e02ea90a0e8bf3$exports","$85f396a493b4e027$export$9099ad97b570f7c","Fill","color_","setColor","$5d571ec9414fea2a$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b14009c8ddfadc85$var$Style","Style","geometryFunction_","$b14009c8ddfadc85$var$defaultGeometryFunction","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$b14009c8ddfadc85$var$defaultStyles","$b14009c8ddfadc85$export$33d0043adf82cc14","$52515b32646d1620$exports","$b14009c8ddfadc85$export$a612282e1e1ae7dc","styles","white","blue","$b14009c8ddfadc85$export$9099ad97b570f7c","$8b66177f43228c5f$var$Property","$8b66177f43228c5f$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$8b66177f43228c5f$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$b14009c8ddfadc85$export$4aaa4bacaec09e94","$0029daffb0840ded$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$0029daffb0840ded$export$c649c04369bd3370","$0029daffb0840ded$export$2513c58bc344fc5c","$0029daffb0840ded$export$84e3c67fd41b07f5","$0029daffb0840ded$export$6cd4b1e0c0e7240c","$0029daffb0840ded$export$9099ad97b570f7c","$0d3e13e6cbc69874$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$1894cda24582da9a$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$1894cda24582da9a$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1894cda24582da9a$export$9099ad97b570f7c","$a4795f00dc9530fb$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$a4795f00dc9530fb$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$1894cda24582da9a$exports","$9d273adc89b91f65$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$9d273adc89b91f65$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$9d273adc89b91f65$export$9099ad97b570f7c","$f6fbeb90ec7648f7$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$f6fbeb90ec7648f7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f6fbeb90ec7648f7$export$9099ad97b570f7c","$d31bc97d019705a3$export$9099ad97b570f7c","$b17755064c98f4bd$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$b73d5ad30737d390$export$3964e67694391753","$b73d5ad30737d390$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$b73d5ad30737d390$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b73d5ad30737d390$export$9099ad97b570f7c","$ca6b30c5cbf24996$var$BATCH_CONSTRUCTORS","$f6fbeb90ec7648f7$exports","$a4795f00dc9530fb$exports","$9d273adc89b91f65$exports","$b73d5ad30737d390$exports","$ca6b30c5cbf24996$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$af060b2ee005860e$export$9099ad97b570f7c","$f4f82de86f87f3a5$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$4382159e91befef5$var$tmpExtent","$4382159e91befef5$var$p1","$4382159e91befef5$var$p2","$4382159e91befef5$var$p3","$4382159e91befef5$var$p4","$4382159e91befef5$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$4382159e91befef5$var$rtlRegEx","$4382159e91befef5$var$horizontalTextAlign","align","test","TEXT_ALIGN","$4382159e91befef5$var$Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$33ba1dda25080cc3$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$4382159e91befef5$export$9099ad97b570f7c","$569c5f1125a255d7$var$ORDER","$569c5f1125a255d7$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$569c5f1125a255d7$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$569c5f1125a255d7$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$569c5f1125a255d7$export$9099ad97b570f7c","$a9d040e5a239f750$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$a9d040e5a239f750$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$a9d040e5a239f750$export$9099ad97b570f7c","$f7585e292fcf6dc5$export$9099ad97b570f7c","$a451836ed9fa69af$export$9099ad97b570f7c","$e98e828d2003bc1a$var$taintedTestContext","$e98e828d2003bc1a$var$IconImage","IconImage","imageState_","tainted_","$e98e828d2003bc1a$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$e98e828d2003bc1a$export$7eb84799c931fe91","$bdd0cbe3d07330ec$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize","iconImage_","$e98e828d2003bc1a$exports","offset_","offsetOrigin_","offsetOrigin","$bdd0cbe3d07330ec$var$__extends","setAnchor","iconImageSize","$5d8f27e59f1a1823$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$5d8f27e59f1a1823$export$65a5cfeed6fd0c33","feature1","feature2","$5d8f27e59f1a1823$export$f0ea347488340e3d","$5d8f27e59f1a1823$export$522dfd100dd96ba1","$5d8f27e59f1a1823$var$renderGeometry","$5d8f27e59f1a1823$var$renderFeatureInternal","$c153db647ed724b6$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c153db647ed724b6$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ffc5f3d579aca584$export$e7468c0ae08395df","clipped","transforms","$a9d040e5a239f750$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$bdd0cbe3d07330ec$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$7a6473f1d8aeafa7$export$9fd146a6491490e3","resultFeatures","$7a6473f1d8aeafa7$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$d333a56ccd100cfd$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","$5d8f27e59f1a1823$export$f3b3f9822f340683","dirty","renderFeature","userExtent","replayGroupInstructions","$c153db647ed724b6$export$9099ad97b570f7c","$072ae9021a014f94$export$9099ad97b570f7c","VectorLayer","$072ae9021a014f94$var$__extends","$c153db647ed724b6$exports","$8b66177f43228c5f$exports","$e96bbcae1eec2911$var$Circle","Circle","setCenterAndRadius","$e96bbcae1eec2911$var$__extends","getRadiusSquared_","$e96bbcae1eec2911$export$9099ad97b570f7c","$d6b307ebeac972b8$var$Mode","$d6b307ebeac972b8$var$DrawEventType","$d6b307ebeac972b8$export$d033e6c8dad0c17","DrawEvent","$d6b307ebeac972b8$var$__extends","$d6b307ebeac972b8$var$Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","$d6b307ebeac972b8$var$getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","$e96bbcae1eec2911$exports","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","$072ae9021a014f94$exports","$2649c727c2ac59b6$exports","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","$d6b307ebeac972b8$export$d9c7a3c9cb1c3b30","opt_geometry","fromCircle","makeRegular","$d6b307ebeac972b8$export$148b89109fc76eea","boxCoordinates","$d6b307ebeac972b8$export$9099ad97b570f7c","$b34f98c7e6e2cb80$export$99c653791dfc1f23","$b34f98c7e6e2cb80$var$log","$b34f98c7e6e2cb80$var$RE_INI_KEY_VAL","$b34f98c7e6e2cb80$var$RE_NEWLINES","$b34f98c7e6e2cb80$var$NEWLINES_MATCH","$b34f98c7e6e2cb80$var$parse","debug","line","keyValueArr","isDoubleQuoted","trim","dotenvPath","$8MZxh","$2px04","cwd","encoding","envPath","path","$9aPXF","homedir","parsed","$eiquG","readFileSync","env","$1c1783b1bce917b4$var$cachedSetTimeout","$1c1783b1bce917b4$var$cachedClearTimeout","$1c1783b1bce917b4$var$process","module","exports","$1c1783b1bce917b4$var$defaultSetTimout","$1c1783b1bce917b4$var$defaultClearTimeout","$1c1783b1bce917b4$var$runTimeout","fun","$1c1783b1bce917b4$var$currentQueue","$1c1783b1bce917b4$var$queue","$1c1783b1bce917b4$var$draining","$1c1783b1bce917b4$var$queueIndex","$1c1783b1bce917b4$var$cleanUpNextTick","$1c1783b1bce917b4$var$drainQueue","run","marker","$1c1783b1bce917b4$var$runClearTimeout","$1c1783b1bce917b4$var$Item","$1c1783b1bce917b4$var$noop","nextTick","browser","argv","version","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","chdir","dir","umask","$66628a2470bef1e9$var$assertPath","$66628a2470bef1e9$var$normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","$66628a2470bef1e9$var$posix","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSeparator","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","root","base","$66628a2470bef1e9$var$_format","isAbsolute1","delimiter","win32","posix","$6add5aa83c5f8cd1$export$7694bd5e6f4c0ae7","parcelRequire","config","osm","$e61f98c73384e953$exports","$0ba296154ef38f2d$exports","getVectorSource","layerName","definedExtent","$90b5c261a4f758a8$exports","getRSPBReserves","getSSSI","getTPO","getSOLR","drawingSource","drawing","MAPMODE","$b92278933294ec34$exports","draw","modeSelect","onchange","drawMode","$d6b307ebeac972b8$exports","createBox","zoomToCoords","lng","parsedLatLng","popup","popupOverlay","$f93e514f182cfa11$exports","popupContent","countryString","charAt","toUpperCase","getFeatureString","hidden","modal","modalContent","tableData","includes","layerData","reduce","Set","header","tbody","row","getReadableLayerName","arrayToTable","onclick","postMessage","heightRequest","outerHeight","location","urlParams","URLSearchParams"],"version":3,"file":"index.d017fc2d.js.map"}